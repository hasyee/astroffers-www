{"version":3,"sources":["store/actions.js","utils/units.js","utils/time.js","utils/sun.js","utils/interval.js","utils/moon.js","utils/getNightInfo.js","utils/calcBands.js","store/selectors.js","utils/createDays.js","store/index.js","components/Location.js","components/Header.js","utils/svg.js","components/Moon.js","components/Night.js","components/CalendarItem.js","components/Calendar.js","hooks/cache.js","components/App.js","serviceWorker.js","index.js"],"names":["setDate","date","state","setLocation","location","cache","addToCache","days","round","Math","PI2","floor","abs","PI","degToRad","decimals","precision","roundTo","deg","radToDeg","rad","toNoon","time","moment","startOf","hour","valueOf","toNextDay","add","sin","cos","asin","acos","getFractionalYear","dayOfYear","getEqTime","y","getDeclination","getAltitude","de","eqTime","lat","lon","Date","timeOffset","getTimezoneOffset","tst","getHours","getMinutes","ha","getHalfDayArcOfSun","minAltitude","Number","isFinite","start","Infinity","end","riseMins","setMins","utc","getNight","loc","isNominalNight","noon","nextDayNoon","thatDayArc","nextDayArc","getIntersection","interval1","interval2","start1","end1","start2","end2","max","min","getMoonNight","interval","latDeg","lonDeg","SunCalc","getMoonTimes","riseDate1","rise","setDate1","set","alwaysUp1","alwaysUp","riseDate2","setDate2","crosses","type","getTime","filter","_","sort","a","b","length","reduce","halfDayArcs","cross","map","halfDayArc","i","getLowerHalfDayArcsOfMoon","find","getNightInfo","latitude","longitude","twilight","midnight","getLocation","night","astroNight","moonNight","moonPhase","getMoonIllumination","phase","moonlessNight","intervals","day","getIntervals","info","bands","getBandsOf","name","getBands","getIntervalOf","forceIntervalToDay","bandToFraction","subtract","forceDateToday","isSame","isBefore","isAfter","endOf","band","timeToFraction","fraction","hours","minutes","getDate","getDays","createSelector","timestamp","weekOffset","startOfMonth","diff","weekday","prevMonthDays","push","clone","classNames","currentMonthDays","daysInMonth","year","month","daysAdded","nextMonthDays","calcBands","createDays","store","Store","now","window","useActions","dispatch","useDispatch","useMemo","Object","keys","actions","acc","actionName","bindActionCreators","React","memo","isOpen","onClose","useSelector","useState","lng","setLng","setLat","handleSubmit","useCallback","icon","title","className","Classes","DIALOG_BODY","label","inline","value","onValueChange","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","onClick","isOpenLocationDialog","setIsOpenLocationDialog","handleOpenLocationDialog","handleCloseLocationDialog","updateMonth","handlePrevMonth","handleNextMonth","handleThisMonth","large","format","getD","mag","sweep","d","svgs","Array","from","toFixed","svgStr","renderToStaticMarkup","xmlns","version","viewBox","width","height","fill","svgToDataURL","getSvg","svg","svgOf","style","backgroundImage","renderBands","key","left","right","renderBand","classnames","useEffect","useCache","props","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f472b7ae.chunk.js","sourcesContent":["export const setDate = date => state => ({ ...state, date });\n\nexport const setLocation = location => state => ({ ...state, location, cache: {} });\n\nexport const addToCache = (date, days) => state => ({ ...state, cache: { ...state.cache, [date]: days } });\n","import leftpad from 'left-pad';\n\nconst { round, floor, abs, PI } = Math;\n\nexport const PI2 = 2 * PI;\nexport const COMPLETE_ARC_SECS = 1296000;\nexport const MILLISECONDS_OF_DAY = 86400000;\nexport const JULIAND_DATE_OF_UTC_EPOCH = 2440587.5;\nexport const JULIAN_DATE_OF_MILLENIUM = 2451545;\n\nexport const roundTo = decimals => {\n  const precision = 10 ** decimals;\n  return (value: number) => round(value * precision) / precision;\n};\n\nexport const roundTo2 = roundTo(2);\n\nexport const fix = value => leftpad(round(abs(value)), 2, 0);\n\nexport const getSign = value => (value < 0 ? -1 : +1);\n\nexport const unSignedFloor = value => getSign(value) * floor(abs(value));\n\nexport const degToRad = deg => (deg / 360) * PI2;\n\nexport const radToDeg = rad => (rad / PI2) * 360;\n\nexport const normalizeRad = rad => {\n  const r = rad % PI2;\n  return r < 0 ? r + PI2 : r;\n};\n\nexport const radToHours = rad => (normalizeRad(rad) / PI2) * 24;\n\nexport const hoursToRad = hours => (hours / 24) * PI2;\n\nexport const hmsToRad = ({ hour = 0, min = 0, sec = 0 }) => ((hour + min / 60 + sec / 3600) / 24) * PI2;\n\nexport const dmsToRad = ({ deg = 0, arcMin = 0, arcSec = 0 }) => degToRad(deg + arcMin / 60 + arcSec / 3600);\n\nexport const radToArcSec = (rad): ArcSec => ((rad % PI2) / PI2) * COMPLETE_ARC_SECS;\n\nexport const radToHms = rad => {\n  const hourWithDecimals = radToHours(rad);\n  const hour = floor(hourWithDecimals);\n  const minWithDecimals = (hourWithDecimals - hour) * 60;\n  const min = floor(minWithDecimals);\n  const secWithDecimals = (minWithDecimals - min) * 60;\n  const sec = roundTo2(secWithDecimals);\n  return { hour, min, sec };\n};\n\nexport const radToDms = rad => {\n  const arcSecs = radToArcSec(rad);\n  const arcMins = unSignedFloor(arcSecs / 60);\n  const arcSec = roundTo2(arcSecs - arcMins * 60);\n  const deg = unSignedFloor(arcMins / 60);\n  const arcMin = round(arcMins - deg * 60);\n  return { deg, arcMin, arcSec };\n};\n\nexport const hmsToString = ({ hour, min, sec }) => `${fix(hour)}h ${fix(min)}m ${fix(sec)}s`;\n\nexport const dmsToString = ({ deg, arcMin, arcSec }) => {\n  const isNegative = [deg, arcMin, arcSec].some(value => value < 0);\n  return `${isNegative ? '-' : ''}${fix(deg)}° ${fix(arcMin)}' ${fix(arcSec)}\"`;\n};\n\nexport const radToHmsString = rad => hmsToString(radToHms(rad));\n\nexport const radToDmsString = rad => dmsToString(radToDms(rad));\n\nexport const timeToJulianDate = time => time / MILLISECONDS_OF_DAY + JULIAND_DATE_OF_UTC_EPOCH;\n\nexport const julianDateToTime = julianDate => (julianDate - JULIAND_DATE_OF_UTC_EPOCH) * MILLISECONDS_OF_DAY;\n\nexport const julianDateToEpochDayNumber = julianDate => julianDate - JULIAN_DATE_OF_MILLENIUM;\n\nexport const epochDayNumberToJulanDate = epochDayNumber => epochDayNumber + JULIAN_DATE_OF_MILLENIUM;\n\nexport const timeToEpochDayNumber = time => julianDateToEpochDayNumber(timeToJulianDate(time));\n\nexport const epochDayNumberToTime = epochDayNumber => epochDayNumberToJulanDate(julianDateToTime(epochDayNumber));\n\nexport const halfDayArcToString = ({ start, end }) =>\n  `RISE: ${new Date(start).toLocaleString()} SET: ${new Date(end).toLocaleString()}`;\n\nexport const getLocation = (latitude, longitude) => ({\n  lat: degToRad(latitude),\n  lon: degToRad(longitude)\n});\n","import moment from 'moment';\n\nexport const toNoon = time => {\n  return moment(time)\n    .startOf('day')\n    .hour(12)\n    .valueOf();\n};\n\nexport const toMidnight = time => {\n  return moment(time)\n    .startOf('day')\n    .add(1, 'day')\n    .valueOf();\n};\n\nexport const toNextDay = time => {\n  return moment(time)\n    .add(1, 'day')\n    .valueOf();\n};\n\nexport const toPrevDay = time => {\n  return moment(time)\n    .subtract(1, 'day')\n    .valueOf();\n};\n","/**\n * SOURCE: https://en.wikipedia.org/wiki/Position_of_the_Sun\n * AND: http://www.jgiesen.de/astro/suncalc/calculations.htm\n * CALCULATOR: http://www.jgiesen.de/astro/suncalc/\n */\n\nimport moment from 'moment';\nimport { PI2, timeToEpochDayNumber, degToRad, radToDeg } from './units';\nimport { toNoon, toNextDay } from './time';\n\nconst { sin, cos, asin, acos } = Math;\n\nconst getFractionalYear = time => {\n  const dayOfYear = moment(time).dayOfYear();\n  return ((dayOfYear - 1) * PI2) / 365;\n};\n\nconst getEqTime = y =>\n  229.18 * (0.000075 + 0.001868 * cos(y) - 0.032077 * sin(y) - 0.014615 * cos(2 * y) - 0.040849 * sin(2 * y));\n\nconst getDeclination = y =>\n  0.006918 -\n  0.399912 * cos(y) +\n  0.070257 * sin(y) -\n  0.006758 * cos(2 * y) +\n  0.000907 * sin(2 * y) -\n  0.002697 * cos(3 * y) +\n  0.00148 * sin(3 * y);\n\nconst getAltitude = (de, { lat, lon }, eqTime, time) => {\n  const date = new Date(time);\n  const timeOffset = eqTime - 4 * radToDeg(lon) + date.getTimezoneOffset();\n  const tst = date.getHours() * 60 + date.getMinutes() + timeOffset;\n  const ha = degToRad(tst / 4 - 180);\n  return asin(sin(lat) * sin(de) + cos(lat) * cos(de) * cos(ha));\n};\n\nexport const getEclipticCoords = time => {\n  const julianDayNumber = timeToEpochDayNumber(time);\n  const meanLongitude = degToRad(280.46) + degToRad(0.985674) * julianDayNumber;\n  const meanAnomaly = degToRad(357.528) + degToRad(0.9856003) * julianDayNumber;\n  return {\n    lon: meanLongitude + degToRad(1.915) * sin(meanAnomaly) + degToRad(0.02) * sin(2 * meanAnomaly),\n    lat: 0\n  };\n};\n\nexport const getHalfDayArcOfSun = (time, { lat, lon }, minAltitude = 0) => {\n  const y = getFractionalYear(time);\n  const eqTime = getEqTime(y);\n  const de = getDeclination(y);\n  const ha = acos((sin(minAltitude) - sin(lat) * sin(de)) / (cos(lat) * cos(de)));\n  if (!Number.isFinite(ha)) {\n    return getAltitude(de, { lat, lon }, eqTime, time) > 0 ? { start: -Infinity, end: Infinity } : null;\n  }\n  const riseMins = 720 + 4 * radToDeg(-lon - ha) - eqTime;\n  const setMins = 720 + 4 * radToDeg(-lon + ha) - eqTime;\n  const start = moment\n    .utc(time)\n    .startOf('day')\n    .add(riseMins, 'minutes')\n    .valueOf();\n  const end = moment\n    .utc(time)\n    .startOf('day')\n    .add(setMins, 'minutes')\n    .valueOf();\n  return { start, end };\n};\n\nexport const getNight = (date, loc, minAltitude = 0, isNominalNight = false) => {\n  const noon = toNoon(date);\n  const nextDayNoon = toNextDay(noon);\n  const thatDayArc = getHalfDayArcOfSun(noon, loc, minAltitude);\n  const nextDayArc = getHalfDayArcOfSun(nextDayNoon, loc, minAltitude);\n  if (!thatDayArc || !nextDayArc)\n    return { start: isNominalNight ? noon : -Infinity, end: isNominalNight ? nextDayNoon : Infinity };\n  if (thatDayArc.end === Infinity && nextDayArc.start === -Infinity) return null;\n  return {\n    start: thatDayArc.end,\n    end: nextDayArc.start\n  };\n};\n","export const getIntersection = (interval1, interval2) => {\n  if (!interval1 || !interval2) return null;\n  const { start: start1, end: end1 } = interval1;\n  const { start: start2, end: end2 } = interval2;\n  if (start1 > end2 || start2 > end1) return null;\n  return {\n    start: Math.max(start1, start2),\n    end: Math.min(end1, end2)\n  };\n};\n\nexport const isInInterval = (interval, value: Timestamp) => {\n  if (!interval || !Number.isFinite(value)) return false;\n  const { start, end } = interval;\n  return value >= start && value <= end;\n};\n\nexport const logInterval = ({ start, end }, label: string = '') => {\n  console.log(label, new Date(start).toLocaleString(), '-', new Date(end).toLocaleString());\n};\n","import SunCalc from 'suncalc';\nimport { radToDeg } from './units';\nimport { toNoon } from './time';\nimport { getIntersection } from './interval';\n\nconst getLowerHalfDayArcsOfMoon = ({ start, end }, { lat, lon }) => {\n  const latDeg = radToDeg(lat);\n  const lonDeg = radToDeg(lon);\n  const { rise: riseDate1, set: setDate1, alwaysUp: alwaysUp1 } = SunCalc.getMoonTimes(\n    toNoon(start),\n    latDeg,\n    lonDeg,\n    true\n  );\n  const { rise: riseDate2, set: setDate2 } = SunCalc.getMoonTimes(toNoon(end), latDeg, lonDeg, true);\n  const crosses = [\n    riseDate1 ? { type: 'rise', time: riseDate1.getTime() } : null,\n    setDate1 ? { type: 'set', time: setDate1.getTime() } : null,\n    riseDate2 ? { type: 'rise', time: riseDate2.getTime() } : null,\n    setDate2 ? { type: 'set', time: setDate2.getTime() } : null\n  ]\n    .filter(_ => _)\n    .sort((a, b) => a.time - b.time);\n  if (crosses.length === 0) return alwaysUp1 ? [] : [{ start: -Infinity, end: Infinity }];\n  return crosses.reduce((halfDayArcs, cross) => {\n    if (cross.type === 'set') return [...halfDayArcs, { start: cross.time, end: Infinity }];\n    else {\n      if (halfDayArcs.length === 0) return [{ start: -Infinity, end: cross.time }];\n      else {\n        return halfDayArcs.map((halfDayArc, i) =>\n          i === halfDayArcs.length - 1 ? { ...halfDayArc, end: cross.time } : halfDayArc\n        );\n      }\n    }\n  }, []);\n};\n\nexport const getMoonNight = (interval, loc) => {\n  if (!interval) return null;\n  const lowerHalfDayArcsOfMoon = getLowerHalfDayArcsOfMoon(interval, loc);\n  return lowerHalfDayArcsOfMoon.find(halfDayArc => !!getIntersection(interval, halfDayArc)) || null;\n};\n\nexport const getMoonPhase = midnight => {\n  const { phase } = SunCalc.getMoonIllumination(new Date(midnight));\n  return phase;\n};\n","import { getNight } from './sun';\nimport { getMoonNight, getMoonPhase } from './moon';\nimport { getLocation, degToRad } from './units';\nimport { getIntersection } from './interval';\nimport { toMidnight } from './time';\n\nexport const getNightInfo = (date, latitude, longitude, twilight) => {\n  const location = getLocation(latitude, longitude);\n  const night = getNight(date, location);\n  const astroNight = night ? getNight(date, location, degToRad(twilight), true) : null;\n  const moonNight = getMoonNight(astroNight, location);\n  const moonPhase = getMoonPhase(toMidnight(date));\n  const moonlessNight = getIntersection(astroNight, moonNight);\n  return {\n    night,\n    moonNight,\n    astroNight,\n    moonlessNight,\n    moonPhase\n  };\n};\n","import moment from 'moment';\nimport { getNightInfo as getIntervals } from './getNightInfo';\nimport { toPrevDay } from './time';\n\nconst DAY_IN_MINS = 24 * 60;\n\nexport default (days, location) => {\n  const intervals = days.map(({ day }) => ({\n    day,\n    ...getIntervals(day, location[1], location[0], -18)\n  }));\n  return days.map((day, i) => ({\n    ...day,\n    info: intervals[i],\n    moonPhase: intervals[i].moonPhase,\n    bands: {\n      night: getBandsOf(intervals, i, day.day, 'night', location),\n      astroNight: getBandsOf(intervals, i, day.day, 'astroNight', location),\n      moonlessNight: getBandsOf(intervals, i, day.day, 'moonlessNight', location)\n    }\n  }));\n};\n\nconst getBandsOf = (intervals, i, day, name, location) => {\n  return getBands(day, getIntervalOf(intervals, day, i - 1, name, location), intervals[i][name]);\n};\n\nconst getBands = (day, ...intervals) => {\n  //console.log({ day, bands: intervals.map(interval => forceIntervalToDay(interval, day)) });\n  const bands = intervals\n    .map(interval => forceIntervalToDay(interval, day))\n    .filter(_ => _)\n    .map(bandToFraction);\n  //console.log(bands);\n  return bands;\n};\n\nconst getIntervalOf = (intervals, day, i, name, location) => {\n  return intervals[i] ? intervals[i][name] : getIntervals(toPrevDay(day), location[1], location[0], -18)[name];\n};\n\nconst forceIntervalToDay = (interval, day) => {\n  if (!interval) return null;\n  return [forceDateToday(interval.start, day), forceDateToday(interval.end, day)];\n};\n\nconst forceDateToday = (date, day) => {\n  if (!Number.isFinite(date)) return null;\n  if (moment(date).isSame(moment(day), 'day')) return date;\n  if (moment(date).isBefore(moment(day), 'day'))\n    return moment(day)\n      .startOf('day')\n      .valueOf();\n  if (moment(date).isAfter(moment(day), 'day'))\n    return moment(day)\n      .endOf('day')\n      .valueOf();\n};\n\nconst bandToFraction = band => band.map(timeToFraction);\n\nconst timeToFraction = time => {\n  const date = moment(time);\n  const fraction = (date.hours() * 60 + date.minutes()) / DAY_IN_MINS;\n  return 1 - fraction < 0.001 ? 1 : fraction;\n};\n","import { createSelector } from 'reselect';\nimport createDays from '../utils/createDays';\n\nexport const getDate = state => state.date;\n\nexport const getLocation = state => state.location;\n\nexport const getCache = state => state.cache;\n\nexport const getDays = createSelector([getDate, getLocation, getCache], (date, location, cache) => {\n  if (cache[date]) return cache[date];\n  return createDays(date, 1, location);\n});\n","import moment from 'moment';\nimport calcBands from './calcBands';\n\nexport default (timestamp, weekOffset = 0, location) => {\n  const date = moment(timestamp);\n  const startOfMonth = moment(date).startOf('month');\n\n  let diff = startOfMonth.weekday() - weekOffset;\n  if (diff < 0) diff += 7;\n\n  const prevMonthDays = [];\n  for (let i = 0; i < diff; i++) {\n    prevMonthDays.push({\n      day: startOfMonth\n        .clone()\n        .subtract(diff - i, 'days')\n        .valueOf(),\n      classNames: 'prevMonth'\n    });\n  }\n\n  const currentMonthDays = [];\n  for (let i = 1; i < date.daysInMonth() + 1; i++) {\n    currentMonthDays.push({\n      day: moment([date.year(), date.month(), i]).valueOf()\n    });\n  }\n\n  const daysAdded = prevMonthDays.length + currentMonthDays.length - 1;\n\n  const nextMonthDays = [];\n  let i = 1;\n  while ((daysAdded + i) % 7 !== 0) {\n    nextMonthDays.push({\n      day: moment(currentMonthDays[currentMonthDays.length - 1].day)\n        .clone()\n        .add(i, 'days')\n        .valueOf(),\n      classNames: 'nextMonth'\n    });\n\n    i = i + 1;\n  }\n\n  return calcBands([...prevMonthDays, ...currentMonthDays, ...nextMonthDays], location);\n};\n","import Store from 'repatch';\nimport { useMemo } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport * as actions from './actions';\nexport { useSelector } from 'react-redux';\nexport * from './selectors';\n\nconst store = new Store({\n  date: Date.now(),\n  location: [19, 47],\n  cache: {}\n});\n\nwindow.store = store;\n\nexport default store;\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => {\n    return Object.keys(actions).reduce(\n      (acc, actionName) => ({ ...acc, [actionName]: bindActionCreators(actions[actionName], dispatch) }),\n      {}\n    );\n  }, [dispatch]);\n};\n","import React, { useState, useCallback } from 'react';\nimport { Button, NumericInput, FormGroup, Dialog, Classes } from '@blueprintjs/core';\nimport { useSelector, useActions, getLocation } from '../store';\nimport './Location.scss';\n\nexport default React.memo(function Location({ isOpen, onClose }) {\n  const location = useSelector(getLocation);\n  const { setLocation } = useActions();\n  const [lng, setLng] = useState(location[0]);\n  const [lat, setLat] = useState(location[1]);\n  const handleSubmit = useCallback(() => {\n    setLocation([lng, lat]);\n    onClose();\n  }, [setLocation, onClose, lng, lat]);\n\n  return (\n    <Dialog icon=\"locate\" title=\"Location\" isOpen={isOpen} onClose={onClose}>\n      <div className={Classes.DIALOG_BODY}>\n        <FormGroup label=\"Lat\" inline className=\"form-group\">\n          <NumericInput value={lat} onValueChange={setLat} min={-90} max={+90} />\n        </FormGroup>\n        <FormGroup label=\"Lng\" inline className=\"form-group\">\n          <NumericInput value={lng} onValueChange={setLng} min={-180} max={+180} />\n        </FormGroup>\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button onClick={handleSubmit}>OK</Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n});\n","import React, { useState, useCallback } from 'react';\nimport moment from 'moment';\nimport { Button } from '@blueprintjs/core';\nimport { useSelector, useActions, getDate } from '../store';\nimport Location from './Location';\nimport './Header.scss';\n\nexport default React.memo(function Header() {\n  const date = useSelector(getDate);\n  const { setDate } = useActions();\n  const [isOpenLocationDialog, setIsOpenLocationDialog] = useState(false);\n  const handleOpenLocationDialog = useCallback(() => setIsOpenLocationDialog(true), []);\n  const handleCloseLocationDialog = useCallback(() => setIsOpenLocationDialog(false), []);\n  const updateMonth = useCallback(\n    value =>\n      setDate(\n        moment(date)\n          .add(value, 'months')\n          .valueOf()\n      ),\n    [date, setDate]\n  );\n  const handlePrevMonth = useCallback(() => updateMonth(-1), [updateMonth]);\n  const handleNextMonth = useCallback(() => updateMonth(+1), [updateMonth]);\n  const handleThisMonth = useCallback(\n    () =>\n      setDate(\n        moment()\n          .startOf('day')\n          .valueOf()\n      ),\n    [setDate]\n  );\n\n  return (\n    <div className=\"Header\">\n      <div className=\"action-bar\">\n        <Button icon=\"locate\" onClick={handleOpenLocationDialog} large>\n          Location\n        </Button>\n        <Location isOpen={isOpenLocationDialog} onClose={handleCloseLocationDialog} />\n        <div className=\"date-controls\">\n          <div className=\"current-date\">{moment(date).format('MMMM YYYY')}</div>\n          <Button onClick={handlePrevMonth} large>\n            «\n          </Button>\n          <Button onClick={handleThisMonth} large>\n            •\n          </Button>\n          <Button onClick={handleNextMonth} large>\n            »\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport svgToDataURL from 'svg-to-dataurl';\n\nconst getSvg = phase => {\n  const d = getD(phase);\n  const svgStr = renderToStaticMarkup(\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 200 150\" width=\"100px\" height=\"100px\">\n      <path className=\"moonback\" fill=\"black\" d=\"m100,0 a20,20 0 1,1 0,150 a20,20 0 1,1 0,-150\" />\n      <path className=\"moonlight\" fill=\"white\" d={d} />\n    </svg>\n  );\n  return svgToDataURL(svgStr);\n};\n\nconst getD = phase => {\n  let sweep = [];\n  let mag;\n  if (phase <= 0.25) {\n    sweep = [1, 0];\n    mag = 20 - 20 * phase * 4;\n  } else if (phase <= 0.5) {\n    sweep = [0, 0];\n    mag = 20 * (phase - 0.25) * 4;\n  } else if (phase <= 0.75) {\n    sweep = [1, 1];\n    mag = 20 - 20 * (phase - 0.5) * 4;\n  } else if (phase <= 1) {\n    sweep = [0, 1];\n    mag = 20 * (phase - 0.75) * 4;\n  } else {\n  }\n  let d = 'm100,0 ';\n  d = d + 'a' + mag + ',20 0 1,' + sweep[0] + ' 0,150 ';\n  return (d = d + 'a20,20 0 1,' + sweep[1] + ' 0,-150');\n};\n\nconst svgs = Array.from({ length: 101 })\n  .map((_, i) => (i / 100).toFixed(2))\n  .reduce((acc, phase) => ({ ...acc, [phase]: getSvg(phase) }), {});\n\nwindow.svgs = svgs;\n\nexport default svgs;\n","import React from 'react';\nimport svgOf from '../utils/svg';\nimport './Moon.scss';\n\nexport default React.memo(function Moon({ phase }) {\n  const svg = svgOf[phase.toFixed(2)];\n\n  return (\n    <div className=\"Moon\">\n      <div className=\"svg-container\" style={{ backgroundImage: `url(${svg})` }} />\n    </div>\n  );\n});\n","import React from 'react';\nimport './Night.scss';\n\nexport default React.memo(function Night({ night, moonNight, astroNight, moonlessNight }) {\n  const renderBand = (name, band, i) => (\n    <div key={i} className={name} style={{ left: `${band[0] * 100}%`, right: `${(1 - band[1]) * 100}%` }} />\n  );\n  const renderBands = (name, bands) => bands.map((band, i) => renderBand(name, band, i));\n\n  return (\n    <div className=\"Night\">\n      <div className=\"daylight\" />\n      {renderBands('night', night)}\n      {renderBands('astroNight', astroNight)}\n      {renderBands('moonlessNight', moonlessNight)}\n    </div>\n  );\n});\n","import React from 'react';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport Moon from './Moon';\nimport Night from './Night';\nimport './CalendarItem.scss';\n\nexport default React.memo(function CalendarItem({ day, classNames, moonPhase, info, bands }) {\n  return (\n    <div className={classnames('CalendarItem', moment(day).isSame(moment(), 'day') && 'current', classNames)}>\n      <header>\n        <div className=\"day\">\n          <div className=\"day-number\">{moment(day).format('D')}</div>\n          <div className=\"day-name\">{moment(day).format('ddd')}</div>\n        </div>\n        <div className=\"moon-container\">\n          <Moon phase={moonPhase} />\n        </div>\n      </header>\n\n      <main>\n        <div className=\"band-container\">\n          <Night {...bands} />\n        </div>\n      </main>\n    </div>\n  );\n});\n","import React from 'react';\nimport useCache from '../hooks/cache';\nimport CalendarItem from './CalendarItem';\nimport './Calendar.scss';\n\nexport default React.memo(function Calendar() {\n  const days = useCache();\n\n  return (\n    <div className=\"Calendar\">\n      <div className=\"grid\">\n        {days.map(props => (\n          <CalendarItem key={props.day} {...props} />\n        ))}\n      </div>\n    </div>\n  );\n});\n","import { useEffect } from 'react';\nimport { useSelector, useActions, getDate, getDays } from '../store';\n\nexport default () => {\n  const date = useSelector(getDate);\n  const days = useSelector(getDays);\n  const { addToCache } = useActions();\n  useEffect(() => {\n    addToCache(date, days);\n  }, [addToCache, date, days]);\n  return days;\n};\n","import React from 'react';\nimport Header from './Header';\nimport Calendar from './Calendar';\nimport './App.scss';\n\nexport default React.memo(function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Calendar date={new Date()} />\n    </div>\n  );\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}